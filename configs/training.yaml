seed_everything: true
trainer:
  accelerator: auto
  strategy: auto
  devices: auto
  num_nodes: 1
  precision: null

  logger:
    class_path: lightning.pytorch.loggers.wandb.WandbLogger
    init_args:
      entity: __replace__
      project: __replace__
      name: __replace__
      log_model: false

  callbacks:
    - class_path: lightning.pytorch.callbacks.ModelCheckpoint
      init_args:
        save_weights_only: true
        save_top_k: 1
        monitor: val_loss
        filename: "{epoch}-{step}-{train_loss:.6f}-{val_loss:.6f}"

    - class_path: LearningRateMonitor
      init_args:
        logging_interval: step

  log_every_n_steps: 50
  fast_dev_run: false
  max_epochs: 30
  min_epochs: null
  max_steps: -1
  min_steps: null
  max_time: null
  limit_train_batches: null
  limit_val_batches: null
  limit_test_batches: null
  limit_predict_batches: null
  overfit_batches: 0.0
  val_check_interval: null
  check_val_every_n_epoch: 1
  num_sanity_val_steps: null
  enable_checkpointing: null
  enable_progress_bar: null
  enable_model_summary: null
  accumulate_grad_batches: 1
  gradient_clip_val: null
  gradient_clip_algorithm: null
  deterministic: null
  benchmark: null
  inference_mode: true
  use_distributed_sampler: true
  profiler: null
  detect_anomaly: false
  barebones: false
  plugins: null
  sync_batchnorm: false
  reload_dataloaders_every_n_epochs: 0
  default_root_dir: null

model:
  class_path: lightning_resnet.resnet18.ResNet18
  init_args:
    num_classes: 10
    safetensors_path: null # change to path of a .safetensors file if using pretrained

optimizer:
  class_path: torch.optim.SGD
  init_args:
    lr: 0.05
    momentum: 0.9
    weight_decay: 0.0005


lr_scheduler:
  class_path: torch.optim.lr_scheduler.OneCycleLR
  init_args:
    max_lr: 0.1
    epochs: 30 # same as max epochs
    steps_per_epoch: 79 # TODO annoying to have to work this out manually


data:
  data_dir: null
  val_split: 0.2
  num_workers: 0
  normalize: false
  batch_size: 256
  seed: 7
  shuffle: true
  pin_memory: true
  drop_last: false
  train_transforms:
      class_path: torchvision.transforms.Compose
      init_args:
        transforms:
          - class_path: torchvision.transforms.RandomCrop
            init_args:
              size: 32
              padding: 4
          - class_path:  torchvision.transforms.RandomHorizontalFlip
          - class_path: torchvision.transforms.ToTensor
          - class_path: torchvision.transforms.Normalize
            init_args:
              mean: [0.4913725490196078, 0.4823529411764706, 0.4466666666666667]
              std: [0.24705882352941178, 0.24352941176470588, 0.2615686274509804]
  val_transforms:
      class_path: torchvision.transforms.Compose
      init_args:
        transforms:
          - class_path: torchvision.transforms.ToTensor
          - class_path: torchvision.transforms.Normalize
            init_args:
              mean: [0.4913725490196078, 0.4823529411764706, 0.4466666666666667]
              std: [0.24705882352941178, 0.24352941176470588, 0.2615686274509804]
  test_transforms:
      class_path: torchvision.transforms.Compose
      init_args:
        transforms:
          - class_path: torchvision.transforms.ToTensor
          - class_path: torchvision.transforms.Normalize
            init_args:
              mean: [0.4913725490196078, 0.4823529411764706, 0.4466666666666667]
              std: [0.24705882352941178, 0.24352941176470588, 0.2615686274509804]
